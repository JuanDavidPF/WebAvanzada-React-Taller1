{"version":3,"sources":["utils/functions/getImageSrc.ts","components/Viewer/Viewer.tsx","components/Card/Card.tsx","components/CardsHolder/CardsHolder.tsx","utils/contexts/DatabaseContext.ts","components/DashboardButton/DashboardButton.tsx","components/DashboardButtonsHolder/DashboardButtonsHolder.tsx","containers/DashboardsHolder/DashboardHolder.tsx","containers/App/App.tsx","index.tsx"],"names":["baseUrl","process","getImageSrc","url","Viewer","useState","imagePath","className","src","alt","Card","CardsHolder","DatabaseContext","createContext","database","setDatabase","updatedDatabase","DashboardButton","iconImagePath","selected","id","ButtonClickHandler","onClick","DashboardButtonsHolder","useContext","HandleButtonSelection","database_clone","JSON","parse","stringify","forEach","component","map","databaseMapped","iconPath","DashboardHolder","PC_Components_Database","references","App","React","PC_Components","setPC_Components","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28bd54ca.chunk.js","sourcesContent":["const baseUrl = `${process.env.PUBLIC_URL}/resources/`;\r\n\r\nexport const getImageSrc = (url: string) => {\r\n  return `${baseUrl}${url}`;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { getImageSrc } from \"../../utils/functions/getImageSrc\";\r\nimport \"./Viewer.css\";\r\n\r\nexport const Viewer = () => {\r\n  const [imagePath, setImagePath] = useState(\r\n    getImageSrc(\"images/chasis/test.png\")\r\n  );\r\n\r\n  return (\r\n    <section className=\"viewer\">\r\n      <img src={imagePath} alt=\"chasis\" />\r\n    </section>\r\n  );\r\n}; //cloese Viewer component\r\n","import \"./Card.css\";\r\n\r\nexport const Card = () => {\r\n  return <div className=\"card\"></div>;\r\n}; //cloese Card component\r\n","import React from \"react\";\r\nimport { Card } from \"../Card/Card\";\r\nimport \"./CardsHolder.css\";\r\n\r\nexport const CardsHolder = () => {\r\n  return (\r\n    <div className=\"cardsHolder\">\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />  <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />  <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n    </div>\r\n  );\r\n}; //closes CardsHolder component\r\n","import { createContext } from \"react\";\r\nimport { ComponentCategory } from \"../interfaces/ComponentCategory\";\r\n\r\nexport const DatabaseContext = createContext({\r\n  database: [] as ComponentCategory[],\r\n\r\n  setDatabase: (updatedDatabase: ComponentCategory[]) => {},\r\n});\r\n","import React from \"react\";\r\nimport { getOriginalNode } from \"typescript\";\r\nimport { getImageSrc } from \"../../utils/functions/getImageSrc\";\r\nimport \"./DashboardButton.css\";\r\n\r\ninterface DashboadButtonProps {\r\n  iconImagePath?: string;\r\n  selected?: boolean;\r\n  id: string;\r\n  ButtonClickHandler: (id: string) => void;\r\n}\r\n\r\nexport const DashboardButton: React.FC<DashboadButtonProps> = ({\r\n  iconImagePath,\r\n  selected,\r\n  id,\r\n  ButtonClickHandler,\r\n}) => {\r\n  const ButtonClicked = () => {\r\n    ButtonClickHandler(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`DashboadButton ${\r\n        selected ? \"DashboardButton--selected\" : \"\"\r\n      }`}\r\n      onClick={ButtonClicked}\r\n    >\r\n      <img\r\n        src={\r\n          (iconImagePath && getImageSrc(iconImagePath)) ||\r\n          getImageSrc(\"images/icons/undefined_dashboard_icon.png\")\r\n        }\r\n        alt=\"Dashboard Icon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { DatabaseContext } from \"../../utils/contexts/DatabaseContext\";\r\nimport { ComponentCategory } from \"../../utils/interfaces/ComponentCategory\";\r\n\r\nimport { DashboardButton } from \"../DashboardButton/DashboardButton\";\r\nimport \"./DashboardButtonsHolder.css\";\r\n\r\nexport const DashboardButtonsHolder = () => {\r\n  const { database, setDatabase } = useContext(DatabaseContext);\r\n\r\n  const HandleButtonSelection = (id: string) => {\r\n    const database_clone: ComponentCategory[] = JSON.parse(\r\n      JSON.stringify(database)\r\n    );\r\n\r\n    database_clone.forEach((component) => {\r\n      component.selected = component.id === id;\r\n    });\r\n\r\n    setDatabase(database_clone);\r\n  };\r\n\r\n  return (\r\n    <div className=\"buttonsHolder\">\r\n      {database.map((databaseMapped) => {\r\n        return (\r\n          <DashboardButton\r\n            iconImagePath={databaseMapped.iconPath}\r\n            selected={databaseMapped.selected}\r\n            id={databaseMapped.id}\r\n            ButtonClickHandler={HandleButtonSelection}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}; //closes DashboardIconsHolder component\r\n","import React from \"react\";\r\nimport { CardsHolder } from \"../../components/CardsHolder/CardsHolder\";\r\nimport { DashboardButtonsHolder } from \"../../components/DashboardButtonsHolder/DashboardButtonsHolder\";\r\n\r\nimport \"./DashboardHolder.css\";\r\n\r\nexport const DashboardHolder = () => {\r\n  return (\r\n    <section className=\"dashboard__holder\">\r\n      <DashboardButtonsHolder></DashboardButtonsHolder>\r\n      <CardsHolder></CardsHolder>\r\n    </section>\r\n  );\r\n}; //cloese App component\r\n","import { Viewer } from \"../../components/Viewer/Viewer\";\r\nimport { ComponentCategory } from \"../../utils/interfaces/ComponentCategory\";\r\nimport React from \"react\";\r\nimport { DashboardHolder } from \"../DashboardsHolder/DashboardHolder\";\r\nimport \"./App.css\";\r\nimport { DatabaseContext } from \"../../utils/contexts/DatabaseContext\";\r\n\r\nconst PC_Components_Database: ComponentCategory[] = [\r\n  {\r\n    id: \"Chassis\",\r\n    iconPath: \"images/icons/chasis_dashboard_icon.png\",\r\n    references: [{}, {}],\r\n    selected: true,\r\n  },\r\n\r\n  {\r\n    id: \"CPUs\",\r\n    iconPath: \"images/icons/chasis_dashboard_icon.png\",\r\n    references: [{}, {}],\r\n  },\r\n\r\n  {\r\n    id: \"GPUs\",\r\n    iconPath: \"images/icons/chasis_dashboard_icon.png\",\r\n    references: [{}, {}],\r\n  },\r\n\r\n  {\r\n    id: \"Motherboards\",\r\n    iconPath: \"images/icons/chasis_dashboard_icon.png\",\r\n    references: [{}, {}],\r\n  },\r\n\r\n  {\r\n    id: \"RAMs\",\r\n    iconPath: \"images/icons/ram_dashboard_icon.png\",\r\n    references: [{}, {}],\r\n  },\r\n]; //Closes Database declaration\r\n\r\nexport const App = () => {\r\n  const [PC_Components, setPC_Components] = React.useState(\r\n    PC_Components_Database\r\n  );\r\n\r\n  const HandleDatabaseUpdate = (updatedDatabase: ComponentCategory[]) => {\r\n    setPC_Components(updatedDatabase);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <DatabaseContext.Provider\r\n        value={{ database: PC_Components, setDatabase: setPC_Components }}\r\n      >\r\n        <Viewer></Viewer>\r\n        <DashboardHolder></DashboardHolder>\r\n      </DatabaseContext.Provider>\r\n    </main>\r\n  );\r\n}; //cloese App component\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./containers/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}