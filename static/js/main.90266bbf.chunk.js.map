{"version":3,"sources":["utils/contexts/DatabaseContext.ts","utils/databases/Database.ts","utils/databases/ChassisDatabase.ts","utils/databases/MotherboardDatabase.ts","utils/databases/CPUDatabase.ts","utils/databases/GPUDatabase.ts","utils/databases/RAMDatabase.ts","utils/databases/HDDDatabase.ts","components/Card/Card.tsx","components/CardsHolder/CardsHolder.tsx","utils/contexts/TabContext.ts","utils/functions/getTabIconSrc.ts","components/DashboardButton/DashboardButton.tsx","components/DashboardButtonsHolder/DashboardButtonsHolder.tsx","containers/DashboardsHolder/DashboardHolder.tsx","utils/functions/getImageSrc.ts","components/Viewer/Viewer.tsx","components/PCEditor/PCEditor.tsx","containers/App/App.tsx","index.tsx"],"names":["DatabaseContext","createContext","Database","Chassis","Motherboads","CPUs","GPUs","RAMs","HDDs","Card","className","CardsHolder","TabContext","tab","setTab","updatedTab","baseUrl","process","getTabIconSrc","icon","DashboardButton","localTab","useContext","onClick","draggable","src","alt","DashboardButtonsHolder","DashboardHolder","React","useState","Provider","value","Viewer","url","imagePath","PCEditor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAGaA,G,KAAkBC,wBAAc,KCKhCC,EAAyB,CACpCC,QCPyC,GDQzCC,YERqD,GFSrDC,KGToC,GHUpCC,KIVoC,GJWpCC,KKXoC,GLYpCC,KMZoC,I,sBCAzBC,EAAO,WAClB,OAAO,qBAAKC,UAAU,UCCXC,G,MAAc,WACzB,OACE,sBAAKD,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IArBF,KAqBY,cAAC,EAAD,IACV,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IAxBF,KAwBY,cAAC,EAAD,IACV,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SCjCOE,EAAaX,wBAAc,CACtCY,IAAK,eACLC,OAAQ,SAACC,OCHLC,EAAO,UAAMC,6BAAN,4BAEAC,EAAgB,SAACL,GAC5B,IAAIM,EAAO,+BAEX,OAAQN,GACN,IAAK,UACHM,EAAO,4BACP,MAEF,IAAK,eACHA,EAAO,iCACP,MAEF,IAAK,OAGL,IAAK,OACH,MAEF,IAAK,OACHA,EAAO,yBAOX,MAAM,GAAN,OAAUH,GAAV,OAAoBG,IClBTC,G,MAAiD,SAAC,GAExD,IADLC,EACI,EADJA,SACI,EAEoBC,qBAAWV,GAA3BC,EAFJ,EAEIA,IAAKC,EAFT,EAESA,OAGb,OACE,qBACEJ,UAAS,wBACPG,IAAQQ,EAAW,6BAA+B,IAEpDE,QAPqB,kBAAMT,EAAOO,IAGpC,SAME,qBAAKG,WAAW,EAAOC,IAAKP,EAAcG,GAAWK,IAAI,uBCrBlDC,G,MAAyB,WAEpC,OACE,sBAAKjB,UAAU,gBAAf,UAEM,cAAC,EAAD,CAAiBW,SAAU,iBAC3B,cAAC,EAAD,CAAiBA,SAAU,SAC3B,cAAC,EAAD,CAAiBA,SAAU,SAC3B,cAAC,EAAD,CAAiBA,SAAU,SAC3B,cAAC,EAAD,CAAiBA,SAAU,SAC3B,cAAC,EAAD,CAAiBA,SAAU,iBCPxBO,G,MAAkB,WAAO,IAAD,EACbC,IAAMC,SAC1B,gBAFiC,mBAC5BjB,EAD4B,KACvBC,EADuB,KAKnC,OACE,yBAASJ,UAAU,oBAAnB,SACE,eAACE,EAAWmB,SAAZ,CAAqBC,MAAO,CAACnB,IAAIA,EAAKC,OAAOA,GAA7C,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCjBFE,EAAO,UAAMC,6BAAN,eCIAgB,G,MAAS,WAAO,IDFDC,ECEA,EACQJ,oBDHRI,ECIZ,yBDHR,GAAN,OAAUlB,GAAV,OAAoBkB,KCCM,mBACnBC,EADmB,UAK1B,OACE,yBAASzB,UAAU,SAAnB,SACE,qBAAKe,IAAKU,EAAWT,IAAI,eCPlBU,G,MAAW,WACtB,OACE,oCACE,cAAC,EAAD,IACA,cAAC,EAAD,SCDOC,EAAM,WACjB,OACE,cAACrC,EAAgB+B,SAAjB,CAA0BC,MAAO9B,EAAjC,SACE,+BACA,cAAC,EAAD,S,MCNNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90266bbf.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { DatabaseType } from \"../interfaces/DatabaseType\";\r\n\r\nexport const DatabaseContext = createContext({} as DatabaseType);\r\n","import { DatabaseType } from \"../interfaces/DatabaseType\";\r\nimport { ChassisDatabase } from \"./ChassisDatabase\";\r\nimport { CPUDatabase } from \"./CPUDatabase\";\r\nimport { GPUDatabase } from \"./GPUDatabase\";\r\nimport { HDDDatabase } from \"./HDDDatabase\";\r\nimport { MotherboardsDatabase } from \"./MotherboardDatabase\";\r\nimport { RAMDatabase } from \"./RAMDatabase\";\r\n\r\nexport const Database: DatabaseType = {\r\n  Chassis: ChassisDatabase,\r\n  Motherboads: MotherboardsDatabase,\r\n  CPUs: CPUDatabase,\r\n  GPUs: GPUDatabase,\r\n  RAMs: RAMDatabase,\r\n  HDDs: HDDDatabase,\r\n};\r\n","import { ChasisType } from \"../interfaces/ChasisType\";\r\n\r\nexport const ChassisDatabase: ChasisType[]=[];","import { MotherboardType } from \"../interfaces/MotherboardType\";\r\n\r\nexport const MotherboardsDatabase: MotherboardType[] = [];","import { CPUType } from \"../interfaces/CPUType\";\r\n\r\nexport const CPUDatabase: CPUType[] = [];","import { GPUType } from \"../interfaces/GPUType\";\r\n\r\nexport const GPUDatabase: GPUType[] = [];","import { RAMType } from \"../interfaces/RAMType\";\r\n\r\nexport const RAMDatabase: RAMType[] = [];","import { HDDType } from \"../interfaces/HDDType\";\r\n\r\nexport const HDDDatabase: HDDType[] = [];","import \"./Card.css\";\r\n\r\nexport const Card = () => {\r\n  return <div className=\"card\"></div>;\r\n}; //cloese Card component\r\n","import React from \"react\";\r\nimport { Card } from \"../Card/Card\";\r\nimport \"./CardsHolder.css\";\r\n\r\nexport const CardsHolder = () => {\r\n  return (\r\n    <div className=\"cardsHolder\">\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />  <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />  <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n      <Card />\r\n    </div>\r\n  );\r\n}; //closes CardsHolder component\r\n","import { createContext } from \"react\";\r\nimport { TabType } from \"../interfaces/TabType\";\r\n\r\nexport const TabContext = createContext({\r\n  tab: \"Motherboards\",\r\n  setTab: (updatedTab: TabType) => {},\r\n});\r\n","import { TabType } from \"../interfaces/TabType\";\r\n\r\nconst baseUrl = `${process.env.PUBLIC_URL}/resources/images/icons/`;\r\n\r\nexport const getTabIconSrc = (tab: TabType) => {\r\n  let icon = \"undefined_dashboard_icon.png\";\r\n\r\n  switch (tab) {\r\n    case \"Chassis\":\r\n      icon = \"chasis_dashboard_icon.png\";\r\n      break;\r\n\r\n    case \"Motherboards\":\r\n      icon = \"motherboard_dashboard_icon.png\";\r\n      break;\r\n\r\n    case \"CPUs\":\r\n      break;\r\n\r\n    case \"GPUs\":\r\n      break;\r\n\r\n    case \"RAMs\":\r\n      icon = \"ram_dashboard_icon.png\";\r\n      break;\r\n\r\n    case \"HDDs\":\r\n      break;\r\n  }\r\n\r\n  return `${baseUrl}${icon}`;\r\n}; //closes getTabIconSrc method\r\n","import React, { useContext } from \"react\";\r\nimport { TabContext } from \"../../utils/contexts/TabContext\";\r\n\r\nimport { TabType } from \"../../utils/interfaces/TabType\";\r\nimport { getTabIconSrc } from \"../../utils/functions/getTabIconSrc\";\r\n\r\nimport \"./DashboardButton.css\";\r\n\r\ninterface DashboadButtonProps {\r\n  localTab: TabType;\r\n}\r\n\r\nexport const DashboardButton: React.FC<DashboadButtonProps> = ({\r\n  localTab,\r\n}) => {\r\n\r\n  const { tab, setTab } = useContext(TabContext);\r\n  const handleClickedTab = () => setTab(localTab);\r\n\r\n  return (\r\n    <div\r\n      className={`DashboadButton${\r\n        tab === localTab ? \" DashboardButton--selected\" : \"\"\r\n      }`}\r\n      onClick={handleClickedTab}\r\n    >\r\n      <img draggable={false} src={getTabIconSrc(localTab)} alt=\"Dashboard Icon\" />\r\n    </div>\r\n  );\r\n};\r\n","\r\n\r\nimport { DashboardButton } from \"../DashboardButton/DashboardButton\";\r\nimport \"./DashboardButtonsHolder.css\";\r\n\r\nexport const DashboardButtonsHolder = () => {\r\n  \r\n  return (\r\n    <div className=\"buttonsHolder\">\r\n \r\n          <DashboardButton localTab={\"Motherboards\"}/>\r\n          <DashboardButton localTab={\"CPUs\"}/>     \r\n          <DashboardButton localTab={\"GPUs\"}/>     \r\n          <DashboardButton localTab={\"RAMs\"}/>     \r\n          <DashboardButton localTab={\"HDDs\"}/>     \r\n          <DashboardButton localTab={\"Chassis\"}/>                 \r\n \r\n    </div>\r\n  );\r\n}; //closes DashboardIconsHolder component\r\n","import React from \"react\";\r\nimport { CardsHolder } from \"../../components/CardsHolder/CardsHolder\";\r\nimport { DashboardButtonsHolder } from \"../../components/DashboardButtonsHolder/DashboardButtonsHolder\";\r\nimport { TabContext } from \"../../utils/contexts/TabContext\";\r\nimport { TabType } from \"../../utils/interfaces/TabType\";\r\n\r\nimport \"./DashboardHolder.css\";\r\n\r\nexport const DashboardHolder = () => {\r\n  const [tab, setTab] = React.useState(\r\n    \"Motherboards\" as TabType    \r\n  );\r\n\r\n  return (\r\n    <section className=\"dashboard__holder\">\r\n      <TabContext.Provider value={{tab:tab, setTab:setTab}}>\r\n        <DashboardButtonsHolder></DashboardButtonsHolder>\r\n        <CardsHolder></CardsHolder>\r\n      </TabContext.Provider>\r\n    </section>\r\n  );\r\n}; //cloese App component\r\n","const baseUrl = `${process.env.PUBLIC_URL}/resources/`;\r\n\r\nexport const getImageSrc = (url: string) => {\r\n  return `${baseUrl}${url}`;\r\n  \r\n}//closes getImageSrc method\r\n","import React, { useState } from \"react\";\r\nimport { getImageSrc } from \"../../utils/functions/getImageSrc\";\r\nimport \"./Viewer.css\";\r\n\r\nexport const Viewer = () => {\r\n  const [imagePath, setImagePath] = useState(\r\n    getImageSrc(\"images/chasis/test.png\")\r\n  );\r\n\r\n  return (\r\n    <section className=\"viewer\">\r\n      <img src={imagePath} alt=\"chasis\" />\r\n    </section>\r\n  );\r\n}; //cloese Viewer component\r\n","import { DashboardHolder } from \"../../containers/DashboardsHolder/DashboardHolder\";\r\nimport { Viewer } from \"../Viewer/Viewer\";\r\nimport \"./PCEditor.css\";\r\n\r\nexport const PCEditor = () => {\r\n  return (\r\n    <section>\r\n      <Viewer></Viewer>\r\n      <DashboardHolder></DashboardHolder>\r\n    </section>\r\n  );\r\n}; //cloese Viewer component\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { DatabaseContext } from \"../../utils/contexts/DatabaseContext\";\r\nimport { Database } from \"../../utils/databases/Database\";\r\nimport { PCEditor } from \"../../components/PCEditor/PCEditor\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <DatabaseContext.Provider value={Database}>\r\n      <main>\r\n      <PCEditor></PCEditor>\r\n      </main>   \r\n    </DatabaseContext.Provider>\r\n  );\r\n}; //cloese App component\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./containers/App/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}